demo_df %>%
head(n=1) %>%
group_by() %>%
nest() %>%
mutate(temp = map(data, print))
demo_df %>%
head(n=1) %>%
group_by() %>%
nest()
demo_df %>%
head(n=1) %>%
group_by() %>%
nest() %>%
mutate(temp = map(data, print))
demo_df %>%
head(n=1) %>%
rowwise() %>%
nest() %>%
mutate(temp = map(data, print))
demo_df %>%
head(n=1) %>%
group_by() %>%
nest()
demo_df %>%
head(n=3) %>%
group_by() %>%
nest()
demo_df %>%
head(n=3) %>%
rowwise() %>%
nest()
demo_df %>%
head(n=3) %>%
rowwise() %>%
nest(data = everything())
demo_df %>%
head(n=3) %>%
group_split(row_number())
demo_df %>%
head(n=3) %>%
group_split(row_number(), .keep = FALSE)
demo_df %>%
head(n=3) %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
check_cube <- function(cube_tibble, input_df = demo_df) {
print(cube_tibble$x)
x <- (cube_coord$x-1):(cube_coord$x+1)
y <- (cube_coord$y-1):(cube_coord$y+1)
z <- (cube_coord$z-1):(cube_coord$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_coord[1] & y == cube_coord[2] & z == cube_coord[3]))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube = factor(cube, levels = c("#", "."))) %>%
group_by(cube, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_coord$x,
y = cube_coord$y,
z = cube_coord$z,
new_cube_status))
}
demo_df %>%
head(n=3) %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
check_cube <- function(cube_tibble, input_df = demo_df) {
print(cube_tibble$x)
print(cube_tibble)
print(typeof(cube_tibble))
print(str(cube_tibble))
x <- (cube_coord$x-1):(cube_coord$x+1)
y <- (cube_coord$y-1):(cube_coord$y+1)
z <- (cube_coord$z-1):(cube_coord$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_coord[1] & y == cube_coord[2] & z == cube_coord[3]))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube = factor(cube, levels = c("#", "."))) %>%
group_by(cube, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_coord$x,
y = cube_coord$y,
z = cube_coord$z,
new_cube_status))
}
demo_df %>%
head(n=3) %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
check_cube <- function(cube_tibble, input_df = demo_df) {
print(cube_tibble$x)
print(cube_tibble)
print(typeof(cube_tibble))
print(str(cube_tibble))
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube = factor(cube, levels = c("#", "."))) %>%
group_by(cube, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
new_cube_status))
}
demo_df %>%
head(n=3) %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
check_cube <- function(cube_tibble, input_df = demo_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube = factor(cube, levels = c("#", "."))) %>%
group_by(cube, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
new_cube_status))
}
demo_df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
demo_df
library(tidyverse)
demo_df <-
strsplit(scan("demo_input.txt", what=""), "") %>%
do.call(rbind, .) %>%
as_tibble() %>%
mutate(x = 1:n(), z = 0) %>%
pivot_longer(names_to = "y", names_prefix = "V", names_ptypes = numeric(),
values_to = "cube_status", -c(x, z)) %>%
mutate(across(c(x, y, z), as.numeric))
demo_df
check_cube <- function(cube_tibble, input_df = demo_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube = factor(cube, levels = c("#", "."))) %>%
group_by(cube, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
demo_df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube) %>%
filter()
check_cube <- function(cube_tibble, input_df = demo_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
demo_df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube) %>%
filter()
demo_df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube) %>%
filter(cube_status == "#")
demo_df$x
simulate <- function(input_df, n = 1) {
df <- input_df
for (simulation in 1:n) {
df <-
df %>%
filter(cube_status == "#")
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(xs, ys, zs)
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
}
df
}
check_cube <- function(cube_tibble, input_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
simulate <- function(input_df, n = 1) {
df <- input_df
for (simulation in 1:n) {
df <-
df %>%
filter(cube_status == "#")
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(xs, ys, zs)
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube, input_df = df)
}
df
}
simulate(demo_df)
check_cube <- function(cube_tibble, input_df = demo_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
simulate <- function(input_df, n = 1) {
df <- input_df
for (simulation in 1:n) {
df <-
df %>%
filter(cube_status == "#")
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(xs, ys, zs)
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube)
}
df
}
simulate(demo_df)
expand_grid(x= 1, y=1:9, z = 1:6)
check_cube <- function(cube_tibble, input_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
simulate <- function(input_df, n = 1) {
df <- input_df
for (simulation in 1:n) {
df <-
df %>%
filter(cube_status == "#")
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(x = xs, y = ys,  x = zs)
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube, input_df = df)
}
df
}
simulate(demo_df)
check_cube <- function(cube_tibble, input_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
simulate <- function(input_df, n = 1) {
df <- input_df
for (simulation in 1:n) {
df <-
df %>%
filter(cube_status == "#")
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(x = xs, y = ys,  z = zs)
print(head(df))
print(head(full_df))
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube, input_df = df)
}
df
}
simulate(demo_df)
out_df <- simulate(demo_df)
out_df %>% filter(cube_status == "$")
out_df %>% filter(cube_status == "#")
check_cube <- function(cube_tibble, input_df) {
x <- (cube_tibble$x-1):(cube_tibble$x+1)
y <- (cube_tibble$y-1):(cube_tibble$y+1)
z <- (cube_tibble$z-1):(cube_tibble$z+1)
cube_neighbour_df <- expand_grid(x, y, z) %>%
filter(!(x == cube_tibble$x & y == cube_tibble$y & z == cube_tibble$z))
sum_df <-
input_df %>%
right_join(cube_neighbour_df) %>%
replace_na(list(cube = ".")) %>%
mutate(cube_status = factor(cube_status,
levels = c("#", "."))) %>%
group_by(cube_status, .drop = FALSE) %>%
summarise(count = n())
new_cube_status = "."
if (cube_tibble$cube_status == "." & sum_df[1, 2] == 3) {
new_cube_status = "#"
} else if (cube_tibble$cube_status == "#" & sum_df[1, 2] %in% 2:3) {
new_cube_status = "#"
}
return(tibble(x = cube_tibble$x,
y = cube_tibble$y,
z = cube_tibble$z,
cube_status = new_cube_status))
}
simulate <- function(input_df, n = 1) {
df <- input_df %>%
filter(cube_status == "#")
for (simulation in 1:n) {
xs <- (min(df$x)-1):(max(df$x)+1)
ys <- (min(df$y)-1):(max(df$y)+1)
zs <- (min(df$z)-1):(max(df$z)+1)
full_df <-
expand_grid(x = xs, y = ys,  z = zs)
print(head(df))
print(head(full_df))
df <-
df %>%
right_join(full_df) %>%
replace_na(list(cube_status = "."))
df <-
df %>%
group_split(row_number(), .keep = FALSE) %>%
map_df(check_cube, input_df = df) %>%
filter(cube_status == "#")
}
df
}
out_df <- simulate(demo_df, n = 1)
out_df %>%
nrow()
out_df <- simulate(demo_df, n = 6)
out_df %>%
nrow()
